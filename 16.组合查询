//2021年3月3日23点06分

-- TABLE products:
+---------+---------+----------------+------------+----------------------------------------------------------------+
| prod_id | vend_id | prod_name      | prod_price | prod_desc                                                      |
+---------+---------+----------------+------------+----------------------------------------------------------------+
| ANV01   |    1001 | .5 ton anvil   |       5.99 | .5 ton anvil, black, complete with handy hook                  |
| ANV02   |    1001 | 1 ton anvil    |       9.99 | 1 ton anvil, black, complete with handy hook and carrying case |
| ANV03   |    1001 | 2 ton anvil    |      14.99 | 2 ton anvil, black, complete with handy hook and carrying case |
| DTNTR   |    1003 | Detonator      |      13.00 | Detonator (plunger powered), fuses not included                |
| FB      |    1003 | Bird seed      |      10.00 | Large bag (suitable for road runners)                          |
| FC      |    1003 | Carrots        |       2.50 | Carrots (rabbit hunting season only)                           |
| FU1     |    1002 | Fuses          |       3.42 | 1 dozen, extra long                                            |
| JP1000  |    1005 | JetPack 1000   |      35.00 | JetPack 1000, intended for single use                          |
| JP2000  |    1005 | JetPack 2000   |      55.00 | JetPack 2000, multi-use                                        |
| OL1     |    1002 | Oil can        |       8.99 | Oil can, red                                                   |
| SAFE    |    1003 | Safe           |      50.00 | Safe with combination lock                                     |
| SLING   |    1003 | Sling          |       4.49 | Sling, one size fits all                                       |
| TNT1    |    1003 | TNT (1 stick)  |       2.50 | TNT, red, single stick                                         |
| TNT2    |    1003 | TNT (5 sticks) |      10.00 | TNT, red, pack of 10 sticks                                    |
+---------+---------+----------------+------------+----------------------------------------------------------------+

-----------------------------------------------------------------------------------------

-- 组合查询

-- 多数SQL查询都只包含从一个或多个表中返回数据的单条SELECT语句。
-- MySQL也允许执行多个查询（多条SELECT语句），并将结果作为单个查询结果集返回。这些组合查询通常称为并（union）或复合查询

-- 有两种基本情况，其中需要使用组合查询：
-- 1.在单个查询中从不同的表返回类似结构的数据
-- 2.对单个表执行多个查询，按单个查询返回数据

-- 多数情况下，组合相同表的两个查询完成的工作与具有多个WHERE子句条件的单条查询完成的工作相同

-----------------------------------------------------------------------------------------

-- 使用UNION

-- 可用UNION操作符来组合数条SQL查询。利用UNION，可给出多条SELECT语句，将它们的结果组合成单个结果集
mysql> SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE prod_price <= 5 
       UNION 
       SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE vend_id IN (1001, 1002);                       -- 列出价格小于等于5的所有物品的一个列表，而且还要包括供应商1001和1002生产的所有物品（不考虑价格）
+---------+---------+------------+
| vend_id | prod_id | prod_price |
+---------+---------+------------+
|    1003 | FC      |       2.50 |
|    1002 | FU1     |       3.42 |
|    1003 | SLING   |       4.49 |
|    1003 | TNT1    |       2.50 |
|    1001 | ANV01   |       5.99 |
|    1001 | ANV02   |       9.99 |
|    1001 | ANV03   |      14.99 |
|    1002 | OL1     |       8.99 |
+---------+---------+------------+

mysql> SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE prod_price <= 5 OR vend_id IN (1001, 1002);    -- 使用WHERE子句的相同查询
+---------+---------+------------+
| vend_id | prod_id | prod_price |
+---------+---------+------------+
|    1001 | ANV01   |       5.99 |
|    1001 | ANV02   |       9.99 |
|    1001 | ANV03   |      14.99 |
|    1003 | FC      |       2.50 |
|    1002 | FU1     |       3.42 |
|    1002 | OL1     |       8.99 |
|    1003 | SLING   |       4.49 |
|    1003 | TNT1    |       2.50 |
+---------+---------+------------+

-- 在这个例子中，使用UNION可能比使用WHERE子句更为复杂，但对于更复杂的过滤条件，或者从多个表中检索数据的情形，使用UNION可能会使处理更简单

-----------------------------------------------------------------------------------------

-- UNION规则
-- 1.UNION必须由两条或两条以上的SELECT语句组成，语句之间用关键字UNION分离
-- 2.UNION中的每个查询必须包含相同的列、表达式或聚集函数（不过每个列不需要以相同的次序列出）
-- 3.列数据类型必须兼容

-----------------------------------------------------------------------------------------

-- 包含或取消重复的行

-- 上述例子两条SELECT语句分别执行时，第一条SELECT语句返回4行，第二条SELECT语句返回5行。用UNION组合两条SELECT语句后只返回了8行而不是9行
-- UNION从查询结果集中自动去除了重复的行（换句话说，它的行为与单条SELECT语句中使用多个WHERE子句条件一样）。这是UNION的默认行为，如果想返回所有匹配行，可使用UNION ALL而不是UNION

mysql> SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE prod_price <= 5 
       UNION ALL 
       SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE vend_id IN (1001, 1002);
+---------+---------+------------+
| vend_id | prod_id | prod_price |
+---------+---------+------------+
|    1003 | FC      |       2.50 |
|    1002 | FU1     |       3.42 |
|    1003 | SLING   |       4.49 |
|    1003 | TNT1    |       2.50 |
|    1001 | ANV01   |       5.99 |
|    1001 | ANV02   |       9.99 |
|    1001 | ANV03   |      14.99 |
|    1002 | FU1     |       3.42 |
|    1002 | OL1     |       8.99 |
+---------+---------+------------+

-- 前面说过，UNION几乎总是完成与多个WHERE条件相同的工作。UNION ALL为UNION的一种形式，它完成WHERE子句完成不了的工作

-----------------------------------------------------------------------------------------

-- 对组合查询结果排序

mysql> SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE prod_price <= 5 
       UNION 
       SELECT vend_id, prod_id, prod_price 
       FROM products 
       WHERE vend_id IN (1001, 1002) 
       ORDER BY vend_id, prod_price;
+---------+---------+------------+
| vend_id | prod_id | prod_price |
+---------+---------+------------+
|    1001 | ANV01   |       5.99 |
|    1001 | ANV02   |       9.99 |
|    1001 | ANV03   |      14.99 |
|    1002 | FU1     |       3.42 |
|    1002 | OL1     |       8.99 |
|    1003 | FC      |       2.50 |
|    1003 | TNT1    |       2.50 |
|    1003 | SLING   |       4.49 |
+---------+---------+------------+

-- 在用UNION组合查询时，只能使用一条ORDER BY子句，它必须出现在最后一条SELECT语句之后。